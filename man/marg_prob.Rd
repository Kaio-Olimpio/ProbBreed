% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/marg_prob.R
\name{marg_prob}
\alias{marg_prob}
\title{Marginal probabilities of superior performance}
\usage{
marg_prob(
  data,
  trait,
  gen,
  env,
  extr_outs,
  int = 0.2,
  save.df = FALSE,
  interactive = FALSE
)
}
\arguments{
\item{data}{A dataframe containing the observations}

\item{trait}{A character representing the name of the column that
corresponds to the analysed variable}

\item{gen}{A character representing the name of the column that
corresponds to the evaluated genotypes}

\item{env}{A character representing the name of the column that
corresponds to the environments}

\item{extr_outs}{An object from the 'extr_outs' function}

\item{int}{An integer representing the selection intensity
(superior limit = 1)}

\item{save.df}{A logical value indicating if the data frames with the marginal
probability of each genotype and the pairwise probabilities should be saved at
the work directory.}

\item{interactive}{A logical value indicating if the plots should be interactive.
If TRUE, the function loads the "plotly" package and uses the "ggplotly" command.}
}
\value{
The function returns a list with:
\itemize{
\item \code{g_hpd} : a catterpillar plot representing the performance of
each genotype, and their respective confidence interval (95\% and 97.5\%)
\item \code{marg_prob.df} : a dataframe with the marginal probability of superior
performance of each genotype
\item \code{marg_prob.plot} : a bar plot with the marginal probability of superior
performance of each genotype
\item \code{pair_prob.df} : a dataframe with the pairwise marginal probability
of superior performance between genotypes
\item \code{pair_prob.plot} a heatmap representing the pairwise probability of
superior performance
}
}
\description{
This function computates the marginal probabilities of superior performance and
yields plots for better visualization. All the plots are customizable, using ggplot2
}
\examples{
\dontrun{
mod = bayes_met(data = maize, gen = c("Hybrid", "normal", "cauchy"),
                env = c("Location", "normal", "cauchy"),
                rept = list(c("Rep", "normal", "cauchy"), c("Block", "normal", "cauchy")),
                trait = "GY", hyperparam = "default", sigma.dist = c("cauchy", "cauchy"),
                mu.dist = c("normal", "normal"), gli.dist = c("normal", "cauchy"),
                reg = list(c("Region", "normal", "cauchy"), c("normal", "cauchy")),
                iter = 100, cores = 2, chain = 2)
                #Remember, increase the number of iterations, cores and chains

outs = extr_outs(data = maize, trait = "GY", gen = "Hybrid", model = mod,
                 effects = c("r", "b", "l", "m", "g", "gl", "gm"),
                 nenv = 16, res.het = TRUE, check.stan.diag = TRUE)

margs = marg_prob(data = maize, trait = "GY", gen = "Hybrid",env = "Location",
                  extr_outs = outs, int = .2, save.df = TRUE, interactive = TRUE)
                  }

}
